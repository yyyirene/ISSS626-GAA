---
title: "In-class exercise 3"
author: "yang yayong"
date: "Sep 9 2024"
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  message: false
  freeze: true
---

```{r}
pacman::p_load(sf, spNetwork, tmap, tidyverse)

```

```{r}
childcare2 <- st_read(dsn="data/rawdata", layer="Punggol_CC") %>%
  st_zm(drop = TRUE,
        what = "ZM")
```

```{r}
network <- st_read(dsn="data/rawdata", 
                   layer="Punggol_St")
```

```{r}
plot(network)
plot(childcare2,add=T,col='red',pch = 19)

```

which mean x,y

Network: This object is typically a geographic spatial dataset that may contain geometric and attribute data for roads or other network structures.

St_geometry (network): This function extracts geometric data (such as coordinate points, lines, or polygons) from the network object for drawing or performing spatial operations.

```{r}

tmap_mode('plot')  # view is interactive

tm_shape(childcare2) +

 tm_dots(col = "red") +  #keep the size constant for zoom in and zoom out

 tm_shape(network) +

 tm_lines()
tmap_mode("plot")
```

```{r}
#| eval: false
lixels <- lixelize_lines(network, 
                         700, 
                         mindist = 375)
```

```{r}
#| eval: false
kfun_childcare <- kfunctions(network, 
                             childcare,
                             start = 0, 
                             end = 1000, 
                             step = 50, 
                             width = 50, 
                             nsim = 50, #49
                             resolution = 50,
                             verbose = FALSE, 
                             conf_int = 0.05)
```

```{r}
#| eval: false
kfun_childcare$plotk

kfun_childcare$plotg
```

```{r}
acc <- read_csv("data/rawdata/thai_road_accident_2019_2022.csv") %>%
  mutate(Month_num = month(incident_datetime)) %>%
  mutate(Month_fac = month(incident_datetime, label = TRUE, abbr = TRUE)) %>%
  mutate(dayofweek = day(incident_datetime)) %>%
  filter(!is.na(longitude) & longitude != "", 
         !is.na(latitude) & latitude != "") %>%  # 确保用 %>% 连接 st_as_sf
  st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
  st_transform(crs = 32647)

```

```{r}
write_rds(acc,"data/rds/acc.rds")
```

```{r}
acc <- read_rds("data/rds/acc.rds")
```
