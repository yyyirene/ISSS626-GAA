{
  "hash": "2dcbb8ed98464db547a0a95805c305e2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take home Exercise2\"\nauthor: \"yang yayong\"\ndate: \"Sep 27 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  message: false\n  freeze: true\n  timeout: 1200 \n---\n\n\n# **Discovering impacts of COVID-19 on Thailand tourism economy at the province level using spatial and spatio-temporal statistics**\n\n![](Thai%20picture.jpg)\n\n## The scene\n\nTourism is one of Thailand’s largest industries, accounting for some 20% of the gross domestic product (GDP). In 2019, Thailand earned 90 billion US\\$ from domestic and international tourism, but the COVID-19 pandemic caused revenues to crash to 24 billion US\\$ in 2020.\n\n::: panel-tabset\n## Objectives\n\nAs a curious geospatial analytics green horn, we are interested to discover:\n\n-   If the key indicators of tourism economy of Thailand are independent from space and space and time.\n\n-   If the tourism economy is indeed spatial and spatio-temporal dependent, then, you would like to detect where are the clusters and outliers, and the emerging hot spot/cold spot areas.\n\n## The Task\n\nThe specific tasks of this take-home exercise are as follows:\n\n-   Using appropriate function of **sf** and **tidyverse**, preparing the following geospatial data layer:\n\n-   a study area layer in sf polygon features. It must be at [province level](https://en.wikipedia.org/wiki/Provinces_of_Thailand) (including Bangkok) of Thailand.\n\n-   a tourism economy indicators layer within the study area in sf polygon features.\n\n-   a derived tourism economy indicator layer in [**spacetime s3 class of sfdep**](https://sfdep.josiahparry.com/articles/spacetime-s3). Keep the time series at **month and year levels**.\n\n-   Using the extracted data, perform global spatial autocorrelation analysis by using [sfdep methods](https://is415-gaa-tskam.netlify.app/in-class_ex/in-class_ex05/in-class_ex05-glsa).\n\n-   Using the extracted data, perform local spatial autocorrelation analysis by using [sfdep methods](https://r4gdsa.netlify.app/chap10.html).\n\n-   Using the extracted data, perform emerging hotspot analysis by using [sfdep methods](https://is415-gaa-tskam.netlify.app/in-class_ex/in-class_ex05/in-class_ex05-ehsa)\n\n-   Describe the spatial patterns revealed by the analysis above.\n:::\n\n## The Data\n\nFor the purpose of this take-home exercise, two data sets shall be used, they are:\n\n-   [Thailand Domestic Tourism Statistics](https://www.kaggle.com/datasets/thaweewatboy/thailand-domestic-tourism-statistics) at Kaggle. You are required to use **version 2** of the data set.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX. You are required to use the province boundary data set.\n\n## **Getting Started**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep,spdep, tmap, tidyverse,ggplot2,plotly,Kendall)\n```\n:::\n\n\n### 1.Getting the Data Into R Environment\n\nImport csv file into r environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt1923 <- read_csv(\"data/rawdata/thailand_domestic_tourism_2019_2023_ver2.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 30800 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): province_thai, province_eng, region_thai, region_eng, variable\ndbl  (1): value\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nImport shapefile into r environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb1 <- st_read(dsn = \"data/rawdata\", \n                 layer = \"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/yangyayong/Downloads/学校文件/smu文件/Term 3/G/yyyirene/ISSS626-GAA/Take_home_Ex/Take_home_Ex02/data/rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nA tourism economy indicators layer within the study area in sf polygon features.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nna_rows <- tt1923[is.na(tt1923$region_eng), ]\n\nna_rows\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 7\n# ℹ 7 variables: date <date>, province_thai <chr>, province_eng <chr>,\n#   region_thai <chr>, region_eng <chr>, variable <chr>, value <dbl>\n```\n\n\n:::\n:::\n\n\nAs can be seen from the figure, na_rows is a data frame containing 0 rows, which #means that is.na(tt1923_selected\\$region_eng) did not match any NA values, so no rows #were filtered out. Therefore, it can be confirmed that there are no missing values #in the region_eng column.\n\nCheck the number of unique values for different columns in a dataset and list the unique entries in a specific column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique_counts <- sapply(tt1923, n_distinct)\nprint(unique_counts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         date province_thai  province_eng   region_thai    region_eng \n           50            77            77             5             5 \n     variable         value \n            8         23267 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(tt1923$region_eng)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"central\"        \"east\"           \"south\"          \"north\"         \n[5] \"east_northeast\"\n```\n\n\n:::\n:::\n\n\nThe code unique(tt1923\\$variable) retrieves all unique values ​​in the variable column in the tt1923 dataset. The output shows 8 different variable names in the column, representing different tourism-related indicators.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(tt1923$variable)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ratio_tourist_stay\" \"no_tourist_stay\"    \"no_tourist_all\"    \n[4] \"no_tourist_thai\"    \"no_tourist_foreign\" \"revenue_all\"       \n[7] \"revenue_thai\"       \"revenue_foreign\"   \n```\n\n\n:::\n:::\n\n\n## **Data Wrangling**\n\n### 1.Selecting the indicators\n\nIn this assignment,i mainly focus on these three indicator:\n\n-   no_tourist_thai - number of local tourists\n\n-   no_tourist_foreign - number of foreign tourists\n\n-   ratio_tourist_stay - ratio of tourists staying\n\nThere are 5 different region names in the region_eng column: \"central\", \"east\", \"south\", \"north\", and \"east_northeast\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(tt1923$region_eng)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"central\"        \"east\"           \"south\"          \"north\"         \n[5] \"east_northeast\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nregion_total_revenue <- tt1923 %>%\n  filter(variable == \"revenue_all\") %>%  \n  group_by(region_eng) %>%                \n  summarise(total_revenue = sum(value, na.rm = TRUE))  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nregion_total_revenue <- region_total_revenue %>%\n  arrange(desc(total_revenue))\n\nggplot(region_total_revenue, aes(x = reorder(region_eng, total_revenue), y = total_revenue, fill = region_eng)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Total Tourism Revenue by Region\", x = \"Region\", y = \"Total Revenue\") +\n  theme_minimal() +\n  coord_flip() +\n  guides(fill = \"none\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nFrom the perspective of tourism revenue, Central (Central Region) is the most valuable area because its tourism revenue is significantly higher than other regions, especially Bangkok, as an important transportation hub and cultural center, attracting a large number of domestic and international tourists.\n\n### 2.Selecting the research area\n\nNext, we select the central region as our research area.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntb_sc <- tt1923  %>%\n  filter(region_eng == \"central\") %>%\n  select(date, province_eng, region_eng, variable,value)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncentral_provinces <- tb_sc %>%\n  filter(region_eng == \"central\") %>%\n  select(province_eng) %>%  \n  distinct()          \n\ncentral_provinces\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 18 × 1\n   province_eng            \n   <chr>                   \n 1 Bangkok                 \n 2 Lopburi                 \n 3 Phra Nakhon Si Ayutthaya\n 4 Saraburi                \n 5 Chainat                 \n 6 Nakhon Pathom           \n 7 Sing Buri               \n 8 Ang Thong               \n 9 Nonthaburi              \n10 Pathum Thani            \n11 Samut Prakan            \n12 Samut Sakhon            \n13 Ratchaburi              \n14 Kanchanaburi            \n15 Samut Songkhram         \n16 Suphan Buri             \n17 Phetchaburi             \n18 Prachuap Khiri Khan     \n```\n\n\n:::\n:::\n\n\nTo ensure geographic consistency, we delete two regions that are not included in the boundary data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntb_sc_filtered <- tb_sc %>%\n  filter(!(province_eng %in% c(\"Lopburi\", \"Chainat\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_provinces <- c(\n  \"Bangkok\", \"Lopburi\", \"Phra Nakhon Si Ayutthaya\", \"Saraburi\", \"Chainat\",\n  \"Nakhon Pathom\", \"Sing Buri\", \"Ang Thong\", \"Nonthaburi\", \"Pathum Thani\",\n  \"Samut Prakan\", \"Samut Sakhon\", \"Ratchaburi\", \"Kanchanaburi\",\n  \"Samut Songkhram\", \"Suphan Buri\", \"Phetchaburi\", \"Prachuap Khiri Khan\"\n)\n```\n:::\n\n\nTo reduce data cache, we select the columns to be studied\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb1_filtered <- b1 %>%\n  filter(ADM1_EN %in% selected_provinces)  %>%\nselect(ADM1_EN, Shape_Area, Shape_Leng, geometry)\n```\n:::\n\n\nNow we plot the study area\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(b1_filtered)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n### 3.Combining data\n\nBy merging these two datasets, we can get both geographic and economic attribute data in one data frame, which makes it easier to perform analysis or visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_data <- left_join(b1_filtered, tb_sc_filtered, by = c(\"ADM1_EN\" = \"province_eng\"))\n```\n:::\n\n\nCheck if there are any missing values ​​after merging\n\n\n::: {.cell}\n\n```{.r .cell-code}\nna_rows2 <- merged_data[is.na(merged_data$region_eng), ]\nmerged_data_date <- merged_data %>%\n  mutate(\n    YearMonth = as.integer(format(date, \"%Y%m\"))\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nna_rows2 <- merged_data_date[is.na(merged_data_date$region_eng), ]\n\nna_rows2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 0 features and 8 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nGeodetic CRS:  WGS 84\n[1] ADM1_EN    Shape_Area Shape_Leng date       region_eng variable   value     \n[8] geometry   YearMonth \n<0 rows> (or 0-length row.names)\n```\n\n\n:::\n:::\n\n\nSince the return result is empty, it means that the region_eng column in merged_data has no missing values.\n\nFinally check the central provinces that we need.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncentral_provinces2 <- unique(merged_data %>% dplyr::pull(ADM1_EN))\n\nprint(central_provinces2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Bangkok\"                  \"Samut Prakan\"            \n [3] \"Nonthaburi\"               \"Pathum Thani\"            \n [5] \"Phra Nakhon Si Ayutthaya\" \"Ang Thong\"               \n [7] \"Sing Buri\"                \"Saraburi\"                \n [9] \"Ratchaburi\"               \"Kanchanaburi\"            \n[11] \"Suphan Buri\"              \"Nakhon Pathom\"           \n[13] \"Samut Sakhon\"             \"Samut Songkhram\"         \n[15] \"Phetchaburi\"              \"Prachuap Khiri Khan\"     \n```\n\n\n:::\n:::\n\n\n### 4.Perform three economic indicators\n\nFrom data provided,we perform three economic indicators：\n\n#### Tourists Quantity Indicators\n\nFirstly,filter the data to generate two new data sets, representing the number of local tourists and foreign tourists in Thailand respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_thai <- merged_data_date %>%\n  filter(variable %in% c( \"no_tourist_thai\"))\n\ntourist_numbers_foreign <- merged_data %>%\n  filter(variable %in% c( \"no_tourist_foreign\"))\n```\n:::\n\n\nThen we focus on yearly analysis.\n\nAggregate data by year\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_thai_yearly <- tourist_numbers_thai %>%\n  mutate(year = lubridate::year(date)) %>%  \n  group_by(ADM1_EN, year) %>%  \n  summarise(total_value = sum(value, na.rm = TRUE)) %>%  \n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_foreign_yearly <- tourist_numbers_foreign %>%\n  mutate(year = lubridate::year(date)) %>%  \n  group_by(ADM1_EN, year) %>%  \n  summarise(total_value = sum(value, na.rm = TRUE)) %>%  \n  ungroup()\n```\n:::\n\n\nsaveRDS(): Saves the data object as a .rds file for quick loading and use later.\n\nreadRDS(): Reads the saved data object from a .rds file to avoid recalculation or processing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(tourist_numbers_thai_yearly,\"data/rds/tourist_numbers_thai_yearly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_thai_yearly <- readRDS(\"data/rds/tourist_numbers_thai_yearly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(tourist_numbers_foreign_yearly,\"data/rds/tourist_numbers_foreign_yearly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_foreign_yearly <-readRDS(\"data/rds/tourist_numbers_foreign_yearly.rds\")\n```\n:::\n\n\nKeep the time series at month and year levels\n\nWe aggregate by year to calculate the total number of tourists per province per year.\n\n#### 4.1Total Local Tourists (Yearly)\n\nEqual\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(tourist_numbers_thai_yearly) +\n  tm_fill(\"total_value\", \n          style = \"equal\", \n          palette = \"Blues\", \n          title = \"Total Local Tourists(Quantile Classification)\") +\n  tm_borders(alpha = 0.5) +\n  tm_facets(by = \"year\") +  \n  tm_layout(main.title = \"Total Local Tourists(Quantile Classification)\",\n            main.title.size = 0.7,\n            legend.width = 1.2, \n            legend.text.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\nQuantile\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(tourist_numbers_thai_yearly) +\n  tm_fill(\"total_value\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          title = \"Total Local Tourists(Quantile Classification)\") +\n  tm_borders(alpha = 0.5) +\n  tm_facets(by = \"year\") +  \n  tm_layout(main.title = \"Total Local Tourists(Quantile Classification)\",\n            main.title.size = 0.7,\n            legend.width = 1.2, \n            legend.text.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\nTourist concentration areas: The first picture shows the trend of tourists continuing to concentrate in the central region, while the second picture reveals the details of the fluctuations in the number of tourists, especially in 2020 and 2022, when tourists were more evenly distributed in the south and the central region.\n\nClassification: The second picture is more detailed, allowing us to observe more regional differences, even areas with lower tourist numbers are distinguished.\n\nTrend: In both pictures, it can be seen that the number of tourists in 2019 and 2022 was more concentrated, while 2020 and 2023 showed different degrees of tourist distribution, especially fluctuations in the central and southern regions.\n\n#### 4.2Total Foreign Tourists (Yearly)\n\n\nEqual\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_foreign_yearly <- tourist_numbers_foreign %>%\n  mutate(year = lubridate::year(date)) %>%  \n  group_by(ADM1_EN, year) %>%  \n  summarise(total_value = sum(value, na.rm = TRUE)) %>%  \n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'ADM1_EN'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(tourist_numbers_foreign_yearly) +\n  tm_fill(\"total_value\", \n          style = \"equal\", \n          palette = \"Greens\", \n          title = \"Total Foreign Tourists(Equal Classification)\") +\n  tm_borders(alpha = 0.5) +  \n  tm_facets(by = \"year\") + \n  tm_layout(main.title = \"Total Foreign Tourists(Equal Classification)\",\n            main.title.size = 0.7,\n            legend.width = 1.2,  \n            legend.text.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\nQuantile\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(tourist_numbers_foreign_yearly) +\n  tm_fill(\"total_value\", \n          style = \"quantile\", \n          palette = \"Greens\", \n          title = \"Total Foreign Tourists(Quantile Classification)\") +\n  tm_borders(alpha = 0.5) +  \n  tm_facets(by = \"year\") + \n  tm_layout(main.title = \"Total Foreign Tourists(Quantile Classification)\",\n            main.title.size = 0.7,\n            legend.width = 1.2,  \n            legend.text.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n\nThe first map shows more clearly the significant advantage of Bangkok in receiving foreign tourists in 2019, while the overall number of tourists in the following years has dropped sharply.\n\nThrough second map, it can be seen that in addition to Bangkok, other regions such as the southern region also have relatively more reception in terms of tourist inflow.\n\nSome areas may not be obvious in the annual data, but may become important in certain months.So next we will mainly analysis numbers of tourists on the monthly aspect to find more insights.\n\n#### Total Tourist Numbers (Monthly)\n\nWe aggregate by month to calculate the total number of tourists per province per month.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_thai_monthly <- tourist_numbers_thai %>%\n  mutate(\n    year = year(date),\n    month = month(date)\n  ) %>%\n  group_by(ADM1_EN, year, month) %>% \n  summarise(total_value = sum(value, na.rm = TRUE)) %>%\n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_foreign_monthly <- tourist_numbers_foreign %>%\n  mutate(\n    year = year(date),\n    month = month(date)\n  ) %>%\n  group_by(ADM1_EN, year, month) %>% \n  summarise(total_value = sum(value, na.rm = TRUE)) %>%\n  ungroup()\n```\n:::\n\n\nsaveRDS(): Saves the data object as a .rds file for quick loading and use later.\n\nreadRDS(): Reads the saved data object from a .rds file to avoid recalculation or processing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(tourist_numbers_thai_monthly,\"data/rds/tourist_numbers_thai_monthly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_thai_monthly <- readRDS(\"data/rds/tourist_numbers_thai_monthly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(tourist_numbers_foreign_monthly,\"data/rds/tourist_numbers_foreign_monthly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_foreign_monthly <-readRDS(\"data/rds/tourist_numbers_foreign_monthly.rds\")\n```\n:::\n\n\n#### 4.3Local tourists monthly\n\nFrom the data,we notice that in 2020-2023，they were too many data unrecorded,so we choose 2019 which least unrecorded data to analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_2019_monthly <- tourist_numbers_thai_monthly %>%\n  filter(year == 2019)\n```\n:::\n\n\n\nEqual\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(tourist_numbers_2019_monthly) +\n  tm_fill(\"total_value\", \n          style = \"equal\", \n          palette = \"YlOrBr\", \n          title = \"Total Local Tourists for monthly 2019(Equal Classification)\") +\n  tm_borders(alpha = 0.5) +\n  tm_facets(by = \"month\") +  \n  tm_layout(main.title = \"Total Local Tourists for monthly 2019(Equal Classification)\",\n            main.title.size = 0.7,\n            legend.width = 1.2, \n            legend.text.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\nQuantile\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(tourist_numbers_2019_monthly) +\n  tm_fill(\"total_value\", \n          style = \"quantile\", \n          palette = \"YlOrBr\", \n          title = \"Total Local Tourists for monthly 2019 (Quantile Classification)\") +\n  tm_borders(alpha = 0.5) +\n  tm_facets(by = \"month\") +  \n  tm_layout(main.title = \"Total Local Tourists for monthly 2019(Quantile Classification)\",\n            main.title.size = 0.7,\n            legend.width = 1.2, \n            legend.text.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n\n#### 4.4Foreign tourist monthly\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_2019_foreign_monthly <- tourist_numbers_foreign_monthly %>%\n  filter(year == 2019)\n```\n:::\n\n\n\nEqual\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(tourist_numbers_2019_foreign_monthly) +\n  tm_fill(\"total_value\", \n          style = \"equal\", \n          palette = \"PuRd\", \n          title = \"Total Foreign Tourists for monthly 2019(Equal Classification)\") +\n  tm_borders(alpha = 0.5) +\n  tm_facets(by = \"month\") +  \n  tm_layout(main.title = \"Total Foreign Tourists for monthly 2019(Equal Classification)\",\n            main.title.size = 0.7,\n            legend.width = 1.2, \n            legend.text.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\nQuantile\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(tourist_numbers_2019_foreign_monthly) +\n  tm_fill(\"total_value\", \n          style = \"quantile\", \n          palette = \"PuRd\", \n          title = \"Total Foreign Tourists for monthly 2019 (Quantile Classification)\") +\n  tm_borders(alpha = 0.5) +\n  tm_facets(by = \"month\") +  \n  tm_layout(main.title = \"Total Foreign Tourists for monthly 2019(Quantile Classification)\",\n            main.title.size = 0.7,\n            legend.width = 1.2, \n            legend.text.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n\nHowever，tourism for foreign tourists has been affected by the epidemic，especially in Bangkok at the end of the 2019.\n\n#### 4.5Tourist behavior\n\nTravel restrictions and health and safety concerns during the pandemic may cause tourists to shorten their stay or even cancel their trips,on the other hand,the length of time tourists stay in a country directly affects their local consumption level, including accommodation, catering, shopping, and entertainment. If the stay rate is high, tourists' local consumption will usually be higher, thus making a greater contribution to the local economy.\n\nWe extracted the data for the ratio indicators.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratio_tourist_stay <- merged_data %>%\n  filter(variable %in% c( \"ratio_tourist_stay\"))\n```\n:::\n\n\nWe use mutate() to extract the year from the date, then use group_by() to group by province and year, and finally use summarise() to calculate the average of each group.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratio_tourist_stay_yearly <- ratio_tourist_stay %>%\n  mutate(year = year(date)) %>%  \n  group_by(ADM1_EN, year) %>%  \n  summarise(average_ratio = mean(value, na.rm = TRUE)) %>%  \n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(ratio_tourist_stay_yearly,\"data/rds/ratio_tourist_stay_yearly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nratio_tourist_stay_yearly <- readRDS(\"data/rds/ratio_tourist_stay_yearly.rds\")\n```\n:::\n\n\nVisualising Tourist behavior Indicator using Equal and Quantile\n\nEqual\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(ratio_tourist_stay_yearly) +\n  tm_fill(\"average_ratio\", \n          style = \"equal\", \n          palette = \"GnBu\", \n          title = \"Ratio of Tourist stay (Equal)\") +\n  tm_borders(alpha = 0.5) +\n  tm_facets(by = \"year\") +  \n  tm_layout(main.title = \"Ratio of Tourist stay (equal Classification)\",\n            main.title.size = 0.7,\n            legend.width = 1.2,  \n            legend.text.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n\nQuantile\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(ratio_tourist_stay_yearly) +\n  tm_fill(\"average_ratio\", \n          style = \"quantile\", \n          palette = \"GnBu\", \n          title = \"Ratio of Tourist stay (Quantile)\") +\n  tm_borders(alpha = 0.5) +\n  tm_facets(by = \"year\") +  \n  tm_layout(main.title = \"Ratio of Tourist stay (Quantile Classification)\",\n            main.title.size = 0.7,\n            legend.width = 1.2,  \n            legend.text.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n\n2019: Before the pandemic, many regions in Thailand had high rates of tourist stay, especially in some provinces in the central and southern parts of the country.\n\n2020-2021: With the outbreak of COVID-19, the tourism industry has been severely affected. It can be clearly seen in the figure that the tourist stay rate in most regions in these years has dropped sharply, especially in 2021, when the stay rate in almost all regions is at the lowest level.\n\n2022-2023: As the pandemic gradually eases, the tourism industry begins to recover. It can be seen in the figure that the tourist stay rate in some regions has gradually recovered, but it has not returned to the level of 2019.\n\n## Creating a Time Series Cube\n\nCompare to temporal-spatial,the impact of COVID-19 on tourism in different provinces is not just static data for a certain period of time, but gradually changes in each region over time. Spacetime can help us identify these dynamic changes.\n\nBecause our data both have geometry, so we use \"as_spacetime\".\n\n#### Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_thai_yearly_st <- as_spacetime(tourist_numbers_thai_yearly, \"ADM1_EN\", \"year\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_foreign_yearly_st <- as_spacetime(tourist_numbers_foreign_yearly, \"ADM1_EN\", \"year\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(tourist_numbers_thai_yearly_st,\"data/rds/tourist_numbers_thai_yearly_st.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_thai_yearly_st <- readRDS(\"data/rds/tourist_numbers_thai_yearly_st.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(tourist_numbers_foreign_yearly_st,\"data/rds/tourist_numbers_foreign_yearly_st.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_foreign_yearly_st <- readRDS(\"data/rds/tourist_numbers_foreign_yearly_st.rds\")\n```\n:::\n\n\nCheck whether convert successfully\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(tourist_numbers_thai_yearly_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(tourist_numbers_foreign_yearly_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n#### Tourists monthly\n\nWe choose 2019 to see the impact.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_local_monthly2019_st <- as_spacetime(tourist_numbers_2019_monthly, \"ADM1_EN\", \"month\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(tourist_numbers_local_monthly2019_st,\"data/rds/tourist_numbers_local_monthly2019_st.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_local_monthly2019_st <- readRDS(\"data/rds/tourist_numbers_local_monthly2019_st.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_froeign_monthly2019_st <- as_spacetime(tourist_numbers_2019_foreign_monthly, \"ADM1_EN\", \"month\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(tourist_numbers_froeign_monthly2019_st,\"data/rds/tourist_numbers_froeign_monthly2019_st.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_froeign_monthly2019_st <- readRDS(\"data/rds/tourist_numbers_froeign_monthly2019_st.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(tourist_numbers_froeign_monthly2019_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(tourist_numbers_local_monthly2019_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n#### Tourists stay\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratio_tourist_stay_yearly_st <- as_spacetime(ratio_tourist_stay_yearly, \"ADM1_EN\", \"year\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(ratio_tourist_stay_yearly_st,\"data/rds/ratio_tourist_stay_yearly_st.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nratio_tourist_stay_yearly_st <- readRDS(\"data/rds/ratio_tourist_stay_yearly_st.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(ratio_tourist_stay_yearly_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n## Global and Local Measures of Spatial Autocorrelation\n\nGlobal Spatial Autocorrelation：Understand whether the data show spatial dependence or spatial correlation as a whole. If Moran's I is significant, it means that the variable values are clustered in space rather than randomly distributed.\n\nIn this case we will use sfdep methods.\n\n### 1.Global Measures of Spatial Association\n\nStep 1: Deriving Queen’s contiguity weights: sfdep methods\n\n::: panel-tabset\n#### Local Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwm_q_numbers_thai_yearly <- tourist_numbers_thai_yearly %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(wm_q_numbers_thai_yearly,\"data/rds/wm_q_numbers_thai_yearly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_numbers_thai_yearly <- readRDS(\"data/rds/wm_q_numbers_thai_yearly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_numbers_thai_yearly\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 80 features and 5 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 98.18107 ymin: 10.95469 xmax: 101.4546 ymax: 15.66074\nGeodetic CRS:  WGS 84\n# A tibble: 80 × 6\n   nb         wt         ADM1_EN    year total_value                    geometry\n * <nb>       <list>     <chr>     <dbl>       <dbl>               <POLYGON [°]>\n 1 <int [19]> <dbl [19]> Ang Thong  2019      796444 ((100.3329 14.79905, 100.3…\n 2 <int [19]> <dbl [19]> Ang Thong  2020      369062 ((100.3329 14.79905, 100.3…\n 3 <int [19]> <dbl [19]> Ang Thong  2021      253957 ((100.3329 14.79905, 100.3…\n 4 <int [19]> <dbl [19]> Ang Thong  2022      670079 ((100.3329 14.79905, 100.3…\n 5 <int [19]> <dbl [19]> Ang Thong  2023      161835 ((100.3329 14.79905, 100.3…\n 6 <int [29]> <dbl [29]> Bangkok    2019    42073847 ((100.6128 13.9552, 100.61…\n 7 <int [29]> <dbl [29]> Bangkok    2020    18795401 ((100.6128 13.9552, 100.61…\n 8 <int [29]> <dbl [29]> Bangkok    2021    11946480 ((100.6128 13.9552, 100.61…\n 9 <int [29]> <dbl [29]> Bangkok    2022    28793993 ((100.6128 13.9552, 100.61…\n10 <int [29]> <dbl [29]> Bangkok    2023     5290145 ((100.6128 13.9552, 100.61…\n# ℹ 70 more rows\n```\n\n\n:::\n:::\n\n\n#### Foreign Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwm_q_numbers_foreign_yearly <- tourist_numbers_foreign_yearly %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(wm_q_numbers_foreign_yearly,\"data/rds/wm_q_numbers_foreign_yearly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_numbers_foreign_yearly <- readRDS(\"data/rds/wm_q_numbers_foreign_yearly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_numbers_foreign_yearly \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 80 features and 5 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 98.18107 ymin: 10.95469 xmax: 101.4546 ymax: 15.66074\nGeodetic CRS:  WGS 84\n# A tibble: 80 × 6\n   nb         wt         ADM1_EN    year total_value                    geometry\n * <nb>       <list>     <chr>     <dbl>       <dbl>               <POLYGON [°]>\n 1 <int [19]> <dbl [19]> Ang Thong  2019       32112 ((100.3329 14.79905, 100.3…\n 2 <int [19]> <dbl [19]> Ang Thong  2020        8259 ((100.3329 14.79905, 100.3…\n 3 <int [19]> <dbl [19]> Ang Thong  2021           0 ((100.3329 14.79905, 100.3…\n 4 <int [19]> <dbl [19]> Ang Thong  2022         670 ((100.3329 14.79905, 100.3…\n 5 <int [19]> <dbl [19]> Ang Thong  2023        1032 ((100.3329 14.79905, 100.3…\n 6 <int [29]> <dbl [29]> Bangkok    2019    24892715 ((100.6128 13.9552, 100.61…\n 7 <int [29]> <dbl [29]> Bangkok    2020     4822513 ((100.6128 13.9552, 100.61…\n 8 <int [29]> <dbl [29]> Bangkok    2021      625362 ((100.6128 13.9552, 100.61…\n 9 <int [29]> <dbl [29]> Bangkok    2022     9832457 ((100.6128 13.9552, 100.61…\n10 <int [29]> <dbl [29]> Bangkok    2023     4279587 ((100.6128 13.9552, 100.61…\n# ℹ 70 more rows\n```\n\n\n:::\n:::\n\n\n#### Local Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwm_q_numbers_local_monthly2019 <- tourist_numbers_2019_monthly %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(wm_q_numbers_local_monthly2019,\"data/rds/wm_q_numbers_monthly2019.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_numbers_local_monthly2019 <- readRDS(\"data/rds/wm_q_numbers_monthly2019.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_numbers_local_monthly2019 \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 192 features and 6 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 98.18107 ymin: 10.95469 xmax: 101.4546 ymax: 15.66074\nGeodetic CRS:  WGS 84\n# A tibble: 192 × 7\n   nb         wt     ADM1_EN    year month total_value                  geometry\n * <nb>       <list> <chr>     <dbl> <dbl>       <dbl>             <POLYGON [°]>\n 1 <int [47]> <dbl>  Ang Thong  2019     1       98816 ((100.3329 14.79905, 100…\n 2 <int [47]> <dbl>  Ang Thong  2019     2       90029 ((100.3329 14.79905, 100…\n 3 <int [47]> <dbl>  Ang Thong  2019     3       96733 ((100.3329 14.79905, 100…\n 4 <int [47]> <dbl>  Ang Thong  2019     4       61929 ((100.3329 14.79905, 100…\n 5 <int [47]> <dbl>  Ang Thong  2019     5       69159 ((100.3329 14.79905, 100…\n 6 <int [47]> <dbl>  Ang Thong  2019     6       62095 ((100.3329 14.79905, 100…\n 7 <int [47]> <dbl>  Ang Thong  2019     7       60045 ((100.3329 14.79905, 100…\n 8 <int [47]> <dbl>  Ang Thong  2019     8       51666 ((100.3329 14.79905, 100…\n 9 <int [47]> <dbl>  Ang Thong  2019     9       57042 ((100.3329 14.79905, 100…\n10 <int [47]> <dbl>  Ang Thong  2019    10       53523 ((100.3329 14.79905, 100…\n# ℹ 182 more rows\n```\n\n\n:::\n:::\n\n\n#### Foreign Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwm_q_numbers_foreign_monthly2019 <- tourist_numbers_2019_foreign_monthly %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(wm_q_numbers_foreign_monthly2019,\"data/rds/wm_q_numbers_foreign_monthly2019.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_numbers_foreign_monthly2019<-readRDS(\"data/rds/wm_q_numbers_foreign_monthly2019.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_numbers_foreign_monthly2019\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 192 features and 6 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 98.18107 ymin: 10.95469 xmax: 101.4546 ymax: 15.66074\nGeodetic CRS:  WGS 84\n# A tibble: 192 × 7\n   nb         wt     ADM1_EN    year month total_value                  geometry\n * <nb>       <list> <chr>     <dbl> <dbl>       <dbl>             <POLYGON [°]>\n 1 <int [47]> <dbl>  Ang Thong  2019     1        5281 ((100.3329 14.79905, 100…\n 2 <int [47]> <dbl>  Ang Thong  2019     2        3915 ((100.3329 14.79905, 100…\n 3 <int [47]> <dbl>  Ang Thong  2019     3        4690 ((100.3329 14.79905, 100…\n 4 <int [47]> <dbl>  Ang Thong  2019     4         899 ((100.3329 14.79905, 100…\n 5 <int [47]> <dbl>  Ang Thong  2019     5         764 ((100.3329 14.79905, 100…\n 6 <int [47]> <dbl>  Ang Thong  2019     6        1022 ((100.3329 14.79905, 100…\n 7 <int [47]> <dbl>  Ang Thong  2019     7        5989 ((100.3329 14.79905, 100…\n 8 <int [47]> <dbl>  Ang Thong  2019     8        2938 ((100.3329 14.79905, 100…\n 9 <int [47]> <dbl>  Ang Thong  2019     9        3390 ((100.3329 14.79905, 100…\n10 <int [47]> <dbl>  Ang Thong  2019    10        1200 ((100.3329 14.79905, 100…\n# ℹ 182 more rows\n```\n\n\n:::\n:::\n\n:::\n\n#### Tourists stay yearly\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwm_q_ratio_tourist_stay_yearly <- ratio_tourist_stay_yearly %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(wm_q_ratio_tourist_stay_yearly,\"data/rds/wm_q_ratio_tourist_stay_yearly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_ratio_tourist_stay_yearly<-readRDS(\"data/rds/wm_q_ratio_tourist_stay_yearly.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_ratio_tourist_stay_yearly \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 80 features and 5 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 98.18107 ymin: 10.95469 xmax: 101.4546 ymax: 15.66074\nGeodetic CRS:  WGS 84\n# A tibble: 80 × 6\n   nb         wt         ADM1_EN    year average_ratio                  geometry\n * <nb>       <list>     <chr>     <dbl>         <dbl>             <POLYGON [°]>\n 1 <int [19]> <dbl [19]> Ang Thong  2019          64.0 ((100.3329 14.79905, 100…\n 2 <int [19]> <dbl [19]> Ang Thong  2020          20.4 ((100.3329 14.79905, 100…\n 3 <int [19]> <dbl [19]> Ang Thong  2021          11.8 ((100.3329 14.79905, 100…\n 4 <int [19]> <dbl [19]> Ang Thong  2022          31.2 ((100.3329 14.79905, 100…\n 5 <int [19]> <dbl [19]> Ang Thong  2023          46.6 ((100.3329 14.79905, 100…\n 6 <int [29]> <dbl [29]> Bangkok    2019          82.2 ((100.6128 13.9552, 100.…\n 7 <int [29]> <dbl [29]> Bangkok    2020          28.2 ((100.6128 13.9552, 100.…\n 8 <int [29]> <dbl [29]> Bangkok    2021          13.0 ((100.6128 13.9552, 100.…\n 9 <int [29]> <dbl [29]> Bangkok    2022          46.6 ((100.6128 13.9552, 100.…\n10 <int [29]> <dbl [29]> Bangkok    2023          75.5 ((100.6128 13.9552, 100.…\n# ℹ 70 more rows\n```\n\n\n:::\n:::\n\n\n### 2.Computing Global Moran’ I\n\n::: panel-tabset\n#### Local Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmoranI_numbers_thai_yearly <- global_moran(wm_q_numbers_thai_yearly$total_value,\n                       wm_q_numbers_thai_yearly$nb,\n                       wm_q_numbers_thai_yearly$wt)\nglimpse(moranI_numbers_thai_yearly)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num -0.042\n $ K: num 23.7\n```\n\n\n:::\n:::\n\n\nAccording to the result: I = -0.042 indicates that the spatial autocorrelation is very weak and close to zero, suggesting that the values ​​between adjacent areas are almost randomly distributed.\n\nK = 23.7 indicates that the data distribution has a very steep peak, which means that most of the data is concentrated in a certain range and there are few discrete values.\n\n#### Foreign Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmoranI_numbers_foreign_yearly <- global_moran(wm_q_numbers_foreign_yearly $total_value,\n                       wm_q_numbers_foreign_yearly $nb,\n                       wm_q_numbers_foreign_yearly $wt)\nglimpse(moranI_numbers_foreign_yearly)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.0152\n $ K: num 52.7\n```\n\n\n:::\n:::\n\n\nAccording to the result: I = -0.0152 indicates that the spatial autocorrelation is very weak and close to zero, suggesting that the values ​​between adjacent areas are almost randomly distributed.\n\nK = 52.7 indicates that the data distribution has a very steep peak, which means that most of the data is concentrated in a certain range and there are few discrete values.\n:::\n\n::: panel-tabset\n#### Local Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmoranI_numbers_thai_monthly <- global_moran(wm_q_numbers_local_monthly2019$total_value,wm_q_numbers_local_monthly2019$nb, wm_q_numbers_local_monthly2019$wt)\n\nglimpse(moranI_numbers_thai_monthly)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.00825\n $ K: num 12.9\n```\n\n\n:::\n:::\n\n\nFrom the resutl: I = 0.00825 indicates that there is a slight positive spatial autocorrelation and there may be some similarity between adjacent areas.\n\nK = 12.9 indicates that the data distribution is highly concentrated, concentrated in a narrow interval, with a very steep peak.\n\n#### Foreign Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmoranI_numbers_foreign_monthly <- global_moran(wm_q_numbers_foreign_monthly2019$total_value,                                             wm_q_numbers_foreign_monthly2019$nb,\n            wm_q_numbers_foreign_monthly2019$wt)\n\nglimpse(moranI_numbers_foreign_monthly)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.0803\n $ K: num 14.9\n```\n\n\n:::\n:::\n\n\nFrom the resutl: I = 0.0803 indicates that there is a slight positive spatial autocorrelation and there may be some similarity between adjacent areas.\n\nK = 14.9 indicates that the data distribution is highly concentrated, concentrated in a narrow interval, with a very steep peak.\n:::\n\n#### Tourists stay yearly\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmoranI_tourist_stay <- global_moran(wm_q_ratio_tourist_stay_yearly$average_ratio,\n                                    wm_q_ratio_tourist_stay_yearly$nb,\n                                    wm_q_ratio_tourist_stay_yearly $wt)\n\n\nglimpse(moranI_tourist_stay)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num -0.0227\n $ K: num 1.95\n```\n\n\n:::\n:::\n\n\nI = -0.0227: Indicates almost no spatial autocorrelation, or even slight negative spatial autocorrelation. There may be no obvious association or similarity between values ​​in adjacent areas. K = 1.95: Indicates that the data distribution is relatively flat, the data is more scattered, and there are more discrete values ​​or outliers.\n\n### 3.Performing Global Moran’sI test\n\n::: panel-tabset\n#### Local Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q_numbers_thai_yearly$total_value,\n                       wm_q_numbers_thai_yearly$nb,\n                       wm_q_numbers_thai_yearly$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = -1.1207, p-value = 0.8688\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.041986875      -0.012658228       0.000684876 \n```\n\n\n:::\n:::\n\n\n#### Foreign Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q_numbers_foreign_yearly$total_value,\n                       wm_q_numbers_foreign_yearly$nb,\n                       wm_q_numbers_foreign_yearly$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 1.5378, p-value = 0.06205\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.0151741493     -0.0126582278      0.0003275636 \n```\n\n\n:::\n:::\n\n\n#### Local Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q_numbers_local_monthly2019$total_value,\n                       wm_q_numbers_local_monthly2019$nb,\n                       wm_q_numbers_local_monthly2019$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 1.1047, p-value = 0.1346\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.0082504995     -0.0052356021      0.0001490398 \n```\n\n\n:::\n:::\n\n\n#### Foreign Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q_numbers_foreign_monthly2019$total_value,\n                       wm_q_numbers_foreign_monthly2019$nb,\n                       wm_q_numbers_foreign_monthly2019$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 7.0478, p-value = 9.09e-13\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.0803207165     -0.0052356021      0.0001473666 \n```\n\n\n:::\n:::\n\n\n#### Tourists stay yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q_ratio_tourist_stay_yearly$average_ratio,\n                       wm_q_ratio_tourist_stay_yearly$nb,\n                       wm_q_ratio_tourist_stay_yearly$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = -0.32533, p-value = 0.6275\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.022706373      -0.012658228       0.000953943 \n```\n\n\n:::\n:::\n\n:::\n\nThe data of foreign tourists show significant spatial clustering in certain time frames (such as monthly data), while the spatial distribution of local tourists and stay rates do not show obvious clustering.\n\n### 4.Performing Global Moran’I permutation test\n\nThis is to ensure that the computation is reproducible.\n\nNext, global_moran_perm() is used to perform Monte Carlo simulation.\n\n::: panel-tabset\n#### Local Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm_local_y=global_moran_perm(wm_q_numbers_thai_yearly$total_value,\n                       wm_q_numbers_thai_yearly$nb,\n                       wm_q_numbers_thai_yearly$wt,\n                  nsim = 999)\n\nglobal_moran_perm_local_y \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = -0.041987, observed rank = 99, p-value = 0.198\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n#### Foreign Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm_foreign_y=global_moran_perm(wm_q_numbers_foreign_yearly$total_value,\n                       wm_q_numbers_foreign_yearly$nb,\n                       wm_q_numbers_foreign_yearly$wt,\n                  nsim = 99)\n\nglobal_moran_perm_foreign_y \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.015174, observed rank = 88, p-value = 0.24\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n#### Local Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm_local_m=global_moran_perm(wm_q_numbers_local_monthly2019$total_value,\n                       wm_q_numbers_local_monthly2019$nb,\n                       wm_q_numbers_local_monthly2019$wt,\n                  nsim = 999)\n\nglobal_moran_perm_local_m \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.0082505, observed rank = 874, p-value = 0.252\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n#### Foreign Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm_foreign_m=global_moran_perm(wm_q_numbers_foreign_monthly2019$total_value,wm_q_numbers_foreign_monthly2019$nb,wm_q_numbers_foreign_monthly2019$wt,\n                  nsim = 999)\n\nglobal_moran_perm_foreign_m\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.080321, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(global_moran_perm_foreign_m$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I of Annual number of foreign tourists monthly\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-105-1.png){width=672}\n:::\n:::\n\n\n#### Tourists stay yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm_stay_y=global_moran_perm(wm_q_ratio_tourist_stay_yearly$average_ratio,\n                       wm_q_ratio_tourist_stay_yearly$nb,\n                       wm_q_ratio_tourist_stay_yearly$wt,\n                  nsim = 999)\n\nglobal_moran_perm_stay_y \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = -0.022706, observed rank = 444, p-value = 0.888\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n:::\n\nMoran's I Monte Carlo simulation of monthly foreign visitor data in 2019 shows significant spatial autocorrelation:\n\nThe simulated Moran's I value is 0.0803 and the p-value is less than 2.2e-16, which means that the spatial autocorrelation in the data is very significant.\n\nThe histogram shows the distribution of the Moran's I statistic generated by the simulation. Most of the simulated values are close to 0, but the actual observed statistic is around 0.08, which shows that the distribution of foreign tourist data has significant positive spatial autocorrelation. That is, adjacent areas have similar numbers of tourists, and tourists may be concentrated in certain areas.\n\nHowever, for the other indicators such as annual numbers of tourist and stay are not significant,which means these indicators are randomly distributed in various province.\n\n## Local spatial autocorrelation analysis\n\nAlthough global analysis can tell us the overall spatial clustering of the data, it cannot point out which specific areas have clustering or anomalies. Local autocorrelation analysis can identify these specific hot spots or cold spots and provide more targeted regional analysis.\n\nTherefore we will continue our local spatial autocorrelation analysis.\n\n### 1.Computing local Moran’s I\n\nii (Local Moran’s I statistic): It reflects the spatial autocorrelation between each spatial unit and its surrounding units. Specifically, a positive ii value indicates that the spatial unit has similar values to its neighboring units (high-high or low-low clustering), while a negative ii value indicates that it has different values from its neighboring units (high-low or low-high inversion).\n\np_ii_sim: This is the p value associated with the ii value, reflecting the statistical significance calculated by simulation. It is calculated by Monte Carlo method or other randomization tests. If the p_ii_sim value is small (such as \\< 0.05), it means that the spatial autocorrelation of the spatial unit is statistically significant, and the spatial clustering or inversion is not generated randomly, but there is a certain structure or pattern.\n\n::: panel-tabset\n#### Local Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_numbers_thai_yearly <- wm_q_numbers_thai_yearly %>% \n  mutate(local_moran = local_moran(\n    total_value, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\nVisualising local Moran’s I\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_numbers_thai_yearly) +\n  tm_fill(\"ii\",\n          style = \"pretty\", \n          palette = \"RdBu\", \n          title = \"local Moran's I statistics\" ) + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(\n    main.title = \"local Moran's I of Annual number of local tourists\",\n    main.title.size = 0.7)\n\nmap2 <- tm_shape(lisa_numbers_thai_yearly) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf), \n          palette = \"-Blues\" ) + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I of Annual number of local tourists \",\n            main.title.size = 0.7)\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-108-1.png){width=672}\n:::\n:::\n\n\nThe dark red area indicates that the local Moran's index is negative, indicating that the number of tourists in the area is low and the number of tourists in the surrounding areas is high, showing a low-high spatial pattern. The red area shows strong spatial differences, especially the area south of Bangkok.\n\nLight blue areas indicate that the local Moran index is positive, indicating that the number of tourists in this area is large, and the number of tourists in the surrounding areas is also large, forming a high-high spatial pattern. This pattern may indicate that these areas are relatively attractive to tourists, especially in central and northern Thailand.\n\nMost light gray areas indicate that the number of tourists in these areas has no obvious spatial autocorrelation with the surrounding areas, and the number of tourists is relatively evenly distributed.\n\nSome regions in Thailand show a strong spatial agglomeration effect of tourist arrivals (such as the blue areas in the central and northern parts), while tourist arrivals in other regions are relatively dispersed or have little connection with surrounding areas.\n\n#### Foreign Tourists yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_numbers_foreign_yearly <- wm_q_numbers_foreign_yearly %>% \n  mutate(local_moran = local_moran(\n    total_value, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa_numbers_foreign_yearly\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 80 features and 17 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 98.18107 ymin: 10.95469 xmax: 101.4546 ymax: 15.66074\nGeodetic CRS:  WGS 84\n# A tibble: 80 × 18\n         ii       eii    var_ii   z_ii   p_ii p_ii_sim p_folded_sim skewness\n      <dbl>     <dbl>     <dbl>  <dbl>  <dbl>    <dbl>        <dbl>    <dbl>\n 1  0.0371  -0.00310  0.00237    0.825 0.409      0.42         0.21   -1.03 \n 2  0.0383  -0.00207  0.00317    0.718 0.473      0.54         0.27   -1.68 \n 3  0.0388  -0.00302  0.00236    0.860 0.390      0.52         0.26   -0.845\n 4  0.0387   0.00901  0.00199    0.667 0.504      0.58         0.29   -1.81 \n 5  0.0387  -0.00218  0.00305    0.741 0.459      0.5          0.25   -1.73 \n 6  0.304   -0.746    0.455      1.56  0.119      0.16         0.08    0.860\n 7  0.366    0.00216  0.0705     1.37  0.171      0.24         0.12    1.21 \n 8 -0.00584  0.000774 0.0000110 -1.99  0.0466     0.14         0.07   -1.65 \n 9  0.635   -0.181    0.229      1.70  0.0885     0.12         0.06    1.28 \n10  0.325   -0.00717  0.0594     1.36  0.173      0.16         0.08    1.11 \n# ℹ 70 more rows\n# ℹ 10 more variables: kurtosis <dbl>, mean <fct>, median <fct>, pysal <fct>,\n#   nb <nb>, wt <list>, ADM1_EN <chr>, year <dbl>, total_value <dbl>,\n#   geometry <POLYGON [°]>\n```\n\n\n:::\n:::\n\n\nVisualising local Moran’s I\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap3 <- tm_shape(lisa_numbers_foreign_yearly) +\n  tm_fill(\"ii\",\n          style = \"pretty\", \n          palette = \"RdBu\", \n          title = \"local Moran's I statistics\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(\n    main.title = \"local Moran's I of Annual number of foreign tourists\",\n    main.title.size = 0.7)\n\nmap4 <- tm_shape(lisa_numbers_foreign_yearly) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf), \n          palette = \"-Blues\" ) + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I of Annual number of foreign tourists \",\n            main.title.size = 0.7)\ntmap_arrange(map3, map4, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-110-1.png){width=672}\n:::\n:::\n\n\nLight orange and light red areas indicate local negative Moran's index values. These areas may have a low-high spatial pattern, suggesting that these areas have fewer tourists, but their neighboring areas have more tourists.\n\nThe tourism pattern of some areas (such as the dark blue area) has a strong spatial agglomeration effect\n\n#### Local Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_numbers_thai_monthly <- wm_q_numbers_local_monthly2019 %>% \n  mutate(local_moran = local_moran(\n    total_value, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa_numbers_thai_monthly\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 192 features and 18 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 98.18107 ymin: 10.95469 xmax: 101.4546 ymax: 15.66074\nGeodetic CRS:  WGS 84\n# A tibble: 192 × 19\n      ii       eii  var_ii  z_ii   p_ii p_ii_sim p_folded_sim skewness kurtosis\n   <dbl>     <dbl>   <dbl> <dbl>  <dbl>    <dbl>        <dbl>    <dbl>    <dbl>\n 1 0.171 -0.0213   0.00646  2.39 0.0168     0.02         0.01   -0.317   -0.185\n 2 0.175  0.00809  0.00586  2.17 0.0297     0.02         0.01   -0.686    0.333\n 3 0.172  0.000403 0.00450  2.56 0.0106     0.02         0.01   -0.335    0.313\n 4 0.186 -0.00134  0.00549  2.53 0.0115     0.02         0.01   -0.506   -0.381\n 5 0.183 -0.0109   0.00682  2.35 0.0189     0.02         0.01   -0.368   -0.104\n 6 0.186 -0.0118   0.00703  2.36 0.0184     0.02         0.01   -0.208   -0.187\n 7 0.187 -0.00314  0.00791  2.13 0.0328     0.02         0.01   -0.448   -0.104\n 8 0.190  0.00561  0.00657  2.28 0.0229     0.02         0.01   -0.124   -0.836\n 9 0.188 -0.0148   0.00762  2.32 0.0202     0.02         0.01   -0.470    0.179\n10 0.189  0.00326  0.00787  2.10 0.0360     0.02         0.01   -0.658    0.655\n# ℹ 182 more rows\n# ℹ 10 more variables: mean <fct>, median <fct>, pysal <fct>, nb <nb>,\n#   wt <list>, ADM1_EN <chr>, year <dbl>, month <dbl>, total_value <dbl>,\n#   geometry <POLYGON [°]>\n```\n\n\n:::\n:::\n\n\nVisualising local Moran’s I\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap5 <- tm_shape(lisa_numbers_thai_monthly) +\n  tm_fill(\"ii\",\n          style = \"pretty\", \n          palette = \"RdBu\", \n          title = \"local Moran's I statistics\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(\n    main.title = \"local Moran's I of Monthly number of local tourists\",\n    main.title.size = 0.7)\n\nmap6 <- tm_shape(lisa_numbers_thai_monthly) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf), \n          palette = \"-Blues\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I of Monthly number of local tourists \",\n            main.title.size = 0.7)\ntmap_arrange(map5, map6, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-112-1.png){width=672}\n:::\n:::\n\n\nThe dark blue areas in the figure indicate high-high agglomeration effects, which may mean that these areas stand out in terms of the number of tourists, etc., while the red areas may be low-high patterns, indicating that these areas do not have the same characteristics as neighboring areas.\n\n#### Foreign Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_numbers_foreign_monthly <- wm_q_numbers_foreign_monthly2019 %>% \n  mutate(local_moran = local_moran(\n    total_value, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa_numbers_foreign_monthly\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 192 features and 18 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 98.18107 ymin: 10.95469 xmax: 101.4546 ymax: 15.66074\nGeodetic CRS:  WGS 84\n# A tibble: 192 × 19\n       ii       eii  var_ii  z_ii   p_ii p_ii_sim p_folded_sim skewness kurtosis\n    <dbl>     <dbl>   <dbl> <dbl>  <dbl>    <dbl>        <dbl>    <dbl>    <dbl>\n 1 0.0765 -0.00442  0.00256  1.60 0.110      0.06         0.03  -0.574   -0.0513\n 2 0.0772 -0.00175  0.00192  1.80 0.0716     0.04         0.02  -0.519   -0.153 \n 3 0.0768  0.000772 0.00208  1.67 0.0956     0.14         0.07  -0.279   -0.453 \n 4 0.0786 -0.00372  0.00259  1.62 0.106      0.08         0.04  -0.475   -0.0874\n 5 0.0786 -0.000677 0.00324  1.39 0.164      0.18         0.09  -0.490   -0.0297\n 6 0.0785  0.00367  0.00197  1.68 0.0921     0.02         0.01  -0.821    0.605 \n 7 0.0762  0.00222  0.00227  1.55 0.120      0.12         0.06  -0.333   -0.690 \n 8 0.0776  0.000580 0.00196  1.74 0.0822     0.08         0.04  -0.288   -0.323 \n 9 0.0774 -0.000973 0.00186  1.82 0.0689     0.1          0.05  -0.0473  -0.519 \n10 0.0784  0.00859  0.00185  1.62 0.104      0.12         0.06  -0.558    0.337 \n# ℹ 182 more rows\n# ℹ 10 more variables: mean <fct>, median <fct>, pysal <fct>, nb <nb>,\n#   wt <list>, ADM1_EN <chr>, year <dbl>, month <dbl>, total_value <dbl>,\n#   geometry <POLYGON [°]>\n```\n\n\n:::\n:::\n\n\nVisualising local Moran’s I\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap3 <- tm_shape(lisa_numbers_foreign_monthly) +\n  tm_fill(\"ii\",\n          style = \"pretty\", \n          palette = \"RdBu\", \n          title = \"local Moran's I statistics\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(\n    main.title = \"local Moran's I of Monthly number of foreign tourists\",\n    main.title.size = 0.7)\n\nmap4 <- tm_shape(lisa_numbers_thai_monthly) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf), \n          palette = \"-Blues\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I of Monthly number of foreign tourists \",\n            main.title.size = 0.7)\ntmap_arrange(map3, map4, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-114-1.png){width=672}\n:::\n:::\n\n\nThe distribution of local tourists in 2019 showed a certain degree of spatial autocorrelation, with some areas (such as the light orange color area) showing a sparse number of tourists and a concentration in the surrounding areas.\n\nThe spatial autocorrelation of foreign tourists was more significant, especially in the central region, where foreign tourists were concentrated, while other areas were sparsely distributed, showing a strong spatial agglomeration effect.\n\nHere we are using the spdep package for additional Local spatial autocorrelation analysis\n\n#### Computing Contiguity Spatial Weights using spdep\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndecember_data <- tourist_numbers_2019_foreign_monthly %>%\n  filter(month == 12)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- poly2nb(december_data, \n                queen=TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(wm_q,\"data/rds/wm_q.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- readRDS(\"data/rds/wm_q.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(wm_q)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 16 \nNumber of nonzero links: 58 \nPercentage nonzero weights: 22.65625 \nAverage number of links: 3.625 \nLink number distribution:\n\n1 2 3 4 5 6 7 \n2 2 4 3 3 1 1 \n2 least connected regions:\n9 11 with 1 link\n1 most connected region:\n4 with 7 links\n```\n\n\n:::\n:::\n\n\nOn average, each region has 54.5 neighbors, but some regions have fewer connections (e.g., only 12 neighbors) and others have more connections (e.g., 95 neighbors).\n\n10464 non-zero connections indicate that most regions are neighbors (28.38542% of possible region pairs)\n\nThe spatial neighbor relationship is converted into a standardized spatial weight matrix in order to prepare for the subsequent spatial autocorrelation analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 16 \nNumber of nonzero links: 58 \nPercentage nonzero weights: 22.65625 \nAverage number of links: 3.625 \n\nWeights style: W \nWeights constants summary:\n   n  nn S0       S1       S2\nW 16 256 16 10.39167 68.28294\n```\n\n\n:::\n:::\n\n\nThis code uses the local Moran's I method to analyze the local spatial autocorrelation of each region in the december_data dataset. By observing the Z-score and p-value in the results, we can determine which regions are spatially significantly correlated with their neighbors. This can help identify spatial clusters or discrete areas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfips <- order(december_data$ADM1_EN)\nlocalMI <- localmoran(december_data$total_value, rswm_q)\nhead(localMI)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           Ii         E.Ii      Var.Ii       Z.Ii Pr(z != E(Ii))\n1  0.07125353 -0.007368153 0.033434805  0.4299748     0.66721401\n2 -1.07176832 -0.990483093 0.021545910 -0.5537697     0.57973645\n3  0.07971451 -0.004133874 0.018819588  0.6112089     0.54106130\n4 -0.10611081 -0.006677720 0.008663677 -1.0682670     0.28540011\n5 -0.24855223 -0.005995100 0.018728784 -1.7723898     0.07632987\n6 -0.19754957 -0.003888768 0.012174313 -1.7551713     0.07923002\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndecember_data.localMI <- cbind(december_data,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndecember_data.localMI <- cbind(december_data,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n```\n:::\n\n\nList the content of the local Moran matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=december_data$ADM1_EN[fips]),\n  check.names=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                  Ii        E.Ii      Var.Ii        Z.Ii\nAng Thong                 7.1254e-02 -7.3682e-03  3.3435e-02  4.2997e-01\nBangkok                  -1.0718e+00 -9.9048e-01  2.1546e-02 -5.5377e-01\nKanchanaburi              7.9715e-02 -4.1339e-03  1.8820e-02  6.1121e-01\nNakhon Pathom            -1.0611e-01 -6.6777e-03  8.6637e-03 -1.0683e+00\nNonthaburi               -2.4855e-01 -5.9951e-03  1.8729e-02 -1.7724e+00\nPathum Thani             -1.9755e-01 -3.8888e-03  1.2174e-02 -1.7552e+00\nPhetchaburi               5.3820e-02 -3.4386e-03  1.5665e-02  4.5748e-01\nPhra Nakhon Si Ayutthaya -5.7268e-03 -2.3771e-05  4.0749e-05 -8.9340e-01\nPrachuap Khiri Khan       1.6534e-02 -3.5333e-04  5.6513e-03  2.2464e-01\nRatchaburi                9.1602e-02 -6.6681e-03  1.5140e-02  7.9866e-01\nSamut Prakan             -7.6581e-01 -2.6316e-03  4.1994e-02 -3.7242e+00\nSamut Sakhon             -2.4193e-01 -7.4242e-03  2.3160e-02 -1.5409e+00\nSamut Songkhram           9.4104e-02 -6.9070e-03  3.1357e-02  5.7043e-01\nSaraburi                  3.3588e-02 -6.0695e-03  4.4814e-02  1.8734e-01\nSing Buri                 1.1032e-01 -7.4487e-03  5.4921e-02  5.0251e-01\nSuphan Buri               7.9500e-02 -7.1552e-03  1.6238e-02  6.8003e-01\n                         Pr.z....E.Ii..\nAng Thong                        0.6672\nBangkok                          0.5797\nKanchanaburi                     0.5411\nNakhon Pathom                    0.2854\nNonthaburi                       0.0763\nPathum Thani                     0.0792\nPhetchaburi                      0.6473\nPhra Nakhon Si Ayutthaya         0.3716\nPrachuap Khiri Khan              0.8223\nRatchaburi                       0.4245\nSamut Prakan                     0.0002\nSamut Sakhon                     0.1233\nSamut Songkhram                  0.5684\nSaraburi                         0.8514\nSing Buri                        0.6153\nSuphan Buri                      0.4965\n```\n\n\n:::\n:::\n\n\nIi: This is the local Moran's I statistic. If Ii is positive, it means that there is a positive correlation between the region and its neighboring regions (hot spot), and if it is negative, it means that there is a negative correlation between the region and its neighboring regions (cold spot or outlier)\n\nFor example, Ratchaburi's Ii is 9.1602e-02, indicating that the number of foreign tourists in this area shows positive spatial autocorrelation in space, and it may be a hot spot.\n\nOn the contrary, Bangkok's Ii is -1.0718e+00, indicating that the number of foreign tourists in this area and its neighbors shows negative spatial correlation, and it may be a cold spot or outlier.\n\n##### Plotting Moran scatterplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnci <- moran.plot(december_data$total_value, rswm_q,\n                  labels=as.character(december_data$ADM1_EN), \n                  xlab=\"Foreign tourists 2019.12\", \n                  ylab=\"Spatially Lag Foreign tourists 2019.12\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-125-1.png){width=672}\n:::\n:::\n\n\n##### Moran scatterplot with standardised variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndecember_data$Z.Total_value <- scale(december_data$total_value) %>% \n  as.vector \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnci2 <- moran.plot(december_data$Z.Total_value, rswm_q,\n                   labels=as.character(december_data$ADM1_EN),\n                   xlab=\"Z.Total_value 2019.12\", \n                   ylab=\"Spatially Lag z-Total_value 2019.12\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-127-1.png){width=672}\n:::\n:::\n\n\nIn both cases: Regression line: The regression line shows the general trend between the number of tourists and the number of spatially lagged tourists. Here, the slope of the regression line is very small and almost horizontal, indicating that the number of foreign tourists overall is not strongly correlated with the number of tourists in its neighboring areas.\n\n##### Four quadrants\n\nThe dotted lines in the figure divide the scatter plot into four quadrants to help us identify \"hot spots\" and \"cold spots\":\n\n“High-High” (upper right): The number of tourists and the number of tourists in its neighbors are both high, representing a potential \"hot spot\" area.\n\n“Low-High” (upper left): There are few tourists in this area, but many tourists in its neighbors, which may be a spatial outlier or transition area.\n\n“Low-Low” (lower left): There are few tourists and few tourists in its neighbors, which may be a \"cold spot\".\n\n“High-Low” (lower right): There are many tourists in this area, but few tourists in its neighbors, which may be a spatial outlier\n\nWe can see that most of the points are concentrated in the lower left corner, indicating that these areas and their neighboring areas have relatively few tourists. \"Bangkok\" and Samut Prakan are located in the lower right corner and above, respectively, indicating that:\n\nBangkok has a very large number of foreign tourists, but its neighboring areas have relatively few tourists.\n\nThe neighboring areas of the Samut Prakan area have more tourists, while the area itself has fewer tourists.\n\n##### LISA Cluster Maps\n\nPrepare a LISA cluster map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\n```\n:::\n\n\nderives the spatially lagged variable of interest (i.e. GDPPC) and centers the spatially lagged variable around its mean.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndecember_data$lag_total_value <- lag.listw(rswm_q, december_data$total_value)\nDV <- december_data$lag_total_value - mean(december_data$lag_total_value)     \n```\n:::\n\n\nThis is follow by centering the local Moran’s around the mean.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLM_I <- localMI[,1] - mean(localMI[,1])    \n```\n:::\n\n\nNext, we will set a statistical significance level for the local Moran.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsignif <- 0.05 \n```\n:::\n\n\nThese four command lines define the low-low (1), low-high (2), high-low (3) and high-high (4) categories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4      \n```\n:::\n\n\nLastly, places non-significant Moran in the category 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquadrant[localMI[,5]>signif] <- 0\n```\n:::\n\n\nIn fact, we can combined all the steps into one single code chunk as shown below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\ndecember_data$lag_total_value <- lag.listw(rswm_q, december_data$total_value)\nDV <- december_data$lag_total_value - mean(december_data$lag_total_value)     \nLM_I <- localMI[,1]   \nsignif <- 0.05       \nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4    \nquadrant[localMI[,5]>signif] <- 0\n```\n:::\n\n\n##### Plotting LISA map\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndecember_data.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(december_data.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-135-1.png){width=672}\n:::\n:::\n\n\nThis means that Samut Prakan itself may not be attractive, resulting in low tourist numbers, but its neighboring areas such as Bangkok are relatively popular, attracting more tourists.\n\n#### Tourists stay yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_numbers_ratio_tourist_stay_yearly <- wm_q_ratio_tourist_stay_yearly %>% \n  mutate(local_moran = local_moran(\n    average_ratio, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\nVisualising local Moran’s I\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap9 <- tm_shape(lisa_numbers_ratio_tourist_stay_yearly) +\n  tm_fill(\"ii\",\n          style = \"pretty\", \n          palette = \"RdBu\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(\n    main.title = \"local Moran's I of Annual Ratio Tourists\",\n    main.title.size = 0.7)\n\nmap10 <- tm_shape(lisa_numbers_ratio_tourist_stay_yearly) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf), \n          palette = \"-Blues\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I of Annual Ratio Tourists\",\n            main.title.size = 0.7)\ntmap_arrange(map9, map10, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-137-1.png){width=672}\n:::\n:::\n\n\nThe left map indicates that blue areas indicate positive local Moran's index, which means that the stay rates in these areas are similar to those in the surrounding areas, and these areas may be clusters of higher stay rates.\n\nlight red areas indicate negative local Moran's index, which means that the stay rates in these areas are different from those in the surrounding areas, and may form isolated areas of low stay rates.\n\nAreas with neutral colors (close to 0) indicate that there is no significant spatial autocorrelation and the distribution of stay rates is relatively random.\n\nHowever the right map indicates that the stay rates in these areas have no obvious spatial dependence or agglomeration.\n:::\n\n### Summary\n\nThrough the analysis of Local Moran's I and p values, tourism activities in central Thailand (especially Bangkok and its surrounding areas) show significant autocorrelation and clustering effects in space.\n\nThe data of local and foreign tourists in Bangkok and surrounding areas show a significant tourist clustering effect. The annual and monthly tourist data show that Bangkok is not only a major tourist destination, but surrounding provinces such as Pathum Thani and Nonthaburi are also important tourist hubs.\n\nThe high stay ratio of tourists in southern provinces such as Nakhon Si Thammarat and Songkhla indicates that these areas may be popular places for vacations and long-term stays.\n\n## Emerging Hot Spots Analysis (EHSA)\n\nAn analytical method for detecting spatial and spatiotemporal patterns, often used to identify hot spots and cold spots in geographic areas or data. It can not only identify current hot and cold spots, but also discover emerging, persistent, declining or temporary hot and cold spots by analyzing trends over time.\n\nMain Types of EHSA：\n\nPersistent Hot Spot: An area that has been a hot spot for the entire time period.\n\nEmerging Hot Spot: An area that has recently become a hot spot, perhaps due to some event or trend.\n\nDiminishing Hot Spot: An area that was a hot spot but is losing its influence.\n\nRebounding Hot Spot: An area that was a hot spot before, then disappeared or weakened, but has become a hot spot again.\n\nSporadic Hot Spot: An area that is sometimes a hot spot and sometimes not during a time period.\n\nCold Spot: The opposite of a hot spot, a cold spot indicates that the area has a low value for a period of time, and may represent a low activity or low density area of ​​a phenomenon.\n\n::: panel-tabset\n#### Local Tourists yearly\n\nComputing Gi\\*\n\nA method in geospatial statistics used to identify hot spots and cold spots in spatial data. It is a local spatial autocorrelation statistic used to detect whether there is a significant clustering pattern within a given spatial unit (such as a geographic area), that is, whether the value of the area is significantly higher or lower than its surrounding neighboring areas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_thai_yearly_st2 <- tourist_numbers_thai_yearly_st %>%\n  activate(\"geometry\")\n\ntourist_numbers_thai_yearly_st_nb <- tourist_numbers_thai_yearly_st2 %>%\n  mutate(\n    centroid = st_centroid(geometry),\n    nb = include_self(st_contiguity(geometry)), \n    wt = st_inverse_distance(nb, centroid, scale = 1, alpha = 1),  \n    .before = 1\n  ) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars_tourist_numbers_thai_yearly <- tourist_numbers_thai_yearly_st_nb %>% \n  group_by(year) %>% \n  mutate(\n    gi_star = local_gstar_perm(total_value,nb,wt)\n  ) %>% \n  tidyr::unnest(gi_star)\n```\n:::\n\n\nMann-Kendall Test A monotonic series or function is one that only increases (or decreases) and never changes direction. So long as the function either stays flat or continues to increase, it is monotonic.\n\nH0: No monotonic trend\n\nH1: Monotonic trend is present\n\nInterpretation\n\nReject the null-hypothesis null if the p-value is smaller than the alpha value (i.e. 1-confident level) Tau ranges between -1 and 1 where:\n\n-1 is a perfectly decreasing series, and\n\n1 is a perfectly increasing series.\n\nMann-Kendall Test on Gi\n\nWith these Gi\\* measures we can then evaluate each location for a trend using the Mann-Kendall test. The code chunk below uses Bangkok.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbkg <- gi_stars_tourist_numbers_thai_yearly %>% \n  ungroup() %>% \n  filter(ADM1_EN == \"Bangkok\") %>% \n  select(ADM1_EN, year, gi_star)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = bkg, \n       aes(x = year, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-141-1.png){width=672}\n:::\n:::\n\n\nPrinting Mann-Kendall test report\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbkg %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n    tau     sl     S     D  varS\n  <dbl>  <dbl> <dbl> <dbl> <dbl>\n1    -1 0.0275   -10    10  16.7\n```\n\n\n:::\n:::\n\n\nFrom the above result, sl is the p-value \\< 0.05. With reference to the results, we will reject the hypothesis null and tau=-1 infer that a downward trend.\n\nMann-Kendall test data.frame\n\nWe can replicate this for each location by using group_by() of dplyr package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_tourist_numbers_thai_yearly <- gi_stars_tourist_numbers_thai_yearly %>%\n  group_by(ADM1_EN) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\nhead(ehsa_tourist_numbers_thai_yearly)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  ADM1_EN          tau     sl     S     D  varS\n  <chr>          <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 Ang Thong     -0.400 0.462     -4    10  16.7\n2 Bangkok       -1     0.0275   -10    10  16.7\n3 Kanchanaburi   0.800 0.0864     8    10  16.7\n4 Nakhon Pathom -0.800 0.0864    -8    10  16.7\n5 Nonthaburi    -1     0.0275   -10    10  16.7\n6 Pathum Thani  -1     0.0275   -10    10  16.7\n```\n\n\n:::\n:::\n\n\nWe can also sort to show significant emerging hot/cold spots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemerging <- ehsa_tourist_numbers_thai_yearly %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:10)\nhead(emerging)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  ADM1_EN               tau     sl     S     D  varS\n  <chr>               <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 Phetchaburi             1 0.0275    10    10  16.7\n2 Prachuap Khiri Khan     1 0.0275    10    10  16.7\n3 Bangkok                -1 0.0275   -10    10  16.7\n4 Nonthaburi             -1 0.0275   -10    10  16.7\n5 Pathum Thani           -1 0.0275   -10    10  16.7\n6 Samut Prakan           -1 0.0275   -10    10  16.7\n```\n\n\n:::\n:::\n\n\nPerforming Emerging Hotspot Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_tourist_numbers_thai_yearly <- emerging_hotspot_analysis(\n  x = tourist_numbers_thai_yearly_st_nb, \n  .var = \"total_value\", \n  k = 1, \n  nsim = 99,\n  nb_col = \"nb\",  \n  wt_col = \"wt\"\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa_tourist_numbers_thai_yearly,\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-146-1.png){width=672}\n:::\n:::\n\n\nNo Pattern Detected: Most areas (12.5) show no significant spatial hot or cold spot patterns. This shows that in these areas, the data does not show a specific hot or cold spot trend, and may be areas where changes are relatively uniform.\n\nSporadic Coldspot: There are some areas (around 1-2) that exhibit an intermittent coldspot pattern, which means that these areas exhibit lower values during certain periods of time that are not as good as their surroundings. Significantly.\n\nSporadic Hotspot: There are a few areas (approximately 1-2) that exhibit an intermittent hotspot pattern, meaning that these areas exhibit higher values during certain periods of time, showing contrast with their surroundings.\n\nVisualising EHSA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb1_filtered_ehsa <- b1_filtered %>%\n  left_join(ehsa_tourist_numbers_thai_yearly,\n            by = join_by(ADM1_EN == location))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nb1_filtered_sig <- b1_filtered_ehsa %>%\n  filter(p_value > 0.5)  \n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(b1_filtered_ehsa) +\n  tm_polygons(\"classification\") + \n  tm_borders(alpha = 0.5) +\n  tm_shape(b1_filtered_sig) +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-148-1.png){width=672}\n:::\n:::\n\n\nThe yellow area represents the sporadic cold spot, which means that in these areas, the tourist stay rate shows a lower value at certain times, and this phenomenon is not continuous, but sporadic. Therefore, the number of the tourists in these areas is lower than that in the surrounding areas.\n\nThe purple area represents the sporadic hot spot, which means that these areas have a higher number of tourists at certain times, but this high stay rate phenomenon is also sporadic, not continuous. This shows that the tourist stay rate in these areas is higher than that in the surrounding areas, but this phenomenon is not fixed.\n\n#### Local Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_local_monthly2019_st2 <- tourist_numbers_local_monthly2019_st %>%\n  activate(\"geometry\")\n\ntourist_numbers_local_monthly_st_nb <- tourist_numbers_local_monthly2019_st2 %>%\n  mutate(\n    centroid = st_centroid(geometry),\n    nb = include_self(st_contiguity(geometry)), \n    wt = st_inverse_distance(nb, centroid, scale = 1, alpha = 1),  \n    .before = 1\n  ) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars_tourist_numbers_local_monthly <- tourist_numbers_local_monthly_st_nb %>% \n  group_by(month) %>% \n  mutate(\n    gi_star = local_gstar_perm(total_value,nb,wt)\n  ) %>% \n  tidyr::unnest(gi_star)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbkglm <- gi_stars_tourist_numbers_local_monthly %>% \n  ungroup() %>% \n  filter(ADM1_EN == \"Bangkok\") %>% \n  select(ADM1_EN, month, gi_star)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = bkglm, \n       aes(x = month, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-152-1.png){width=672}\n:::\n:::\n\n\nPrinting Mann-Kendall test report\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbkglm %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n     tau    sl     S     D  varS\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n1 -0.364 0.115   -24  66.0  213.\n```\n\n\n:::\n:::\n\n\nFrom the above result, sl is the p-value \\> 0.05. With reference to the results, we will not reject the hypothesis null but we can see that a downward trend at the end of 2019,which means the epidemic indeed affect the number of the foreign tourists.\n\nMann-Kendall test data.frame We can replicate this for each location by using group_by() of dplyr package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_tourist_numbers_local_month <- gi_stars_tourist_numbers_local_monthly %>%\n  group_by(ADM1_EN) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\nhead(ehsa_tourist_numbers_local_month)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  ADM1_EN           tau      sl     S     D  varS\n  <chr>           <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 Ang Thong     -0.273  0.244     -18  66.0  213.\n2 Bangkok       -0.364  0.115     -24  66.0  213.\n3 Kanchanaburi   0.667  0.00319    44  66.0  213.\n4 Nakhon Pathom -0.0303 0.945      -2  66.0  213.\n5 Nonthaburi    -0.515  0.0236    -34  66.0  213.\n6 Pathum Thani  -0.455  0.0467    -30  66.0  213.\n```\n\n\n:::\n:::\n\n\nWe can also sort to show significant emerging hot/cold spots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemerging <- ehsa_tourist_numbers_local_month %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:10)\nhead(emerging)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  ADM1_EN         tau      sl     S     D  varS\n  <chr>         <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 Kanchanaburi  0.667 0.00319    44  66.0  213.\n2 Saraburi      0.667 0.00319    44  66.0  213.\n3 Suphan Buri   0.606 0.00749    40  66.0  213.\n4 Nonthaburi   -0.515 0.0236    -34  66.0  213.\n5 Samut Prakan -0.485 0.0335    -32  66.0  213.\n6 Pathum Thani -0.455 0.0467    -30  66.0  213.\n```\n\n\n:::\n:::\n\n\nPerforming Emerging Hotspot Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_tourist_numbers_local_month <- emerging_hotspot_analysis(\n  x = tourist_numbers_local_monthly_st_nb, \n  .var = \"total_value\", \n  k = 1, \n  nsim = 99,\n  nb_col = \"nb\",  \n  wt_col = \"wt\"        \n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa_tourist_numbers_local_month,\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-157-1.png){width=672}\n:::\n:::\n\n\nNo Pattern Detected: Most areas show no significant spatial hot or cold spot patterns. This shows that in these areas, the data does not show a specific hot or cold spot trend, and may be areas where changes are relatively uniform.\n\nSporadic Coldspot: There are some areas (around 2) that exhibit an intermittent coldspot pattern, which means that these areas exhibit lower values during certain periods of time that are not as good as their surroundings. Significantly.\n\nSporadic Hotspot: There are a few areas (approximately 3) that exhibit an intermittent hotspot pattern, meaning that these areas exhibit higher values during certain periods of time, showing contrast with their surroundings.\n\nVisualising EHSA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb1_filtered_ehsa_lm <- b1_filtered %>%\n  left_join(ehsa_tourist_numbers_local_month,\n            by = join_by(ADM1_EN == location))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nb1_filtered_sig_lm <- b1_filtered_ehsa_lm %>%\n  filter(p_value < 0.5)  \n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(b1_filtered_ehsa_lm) +\n  tm_polygons(\"classification\") + \n  tm_borders(alpha = 0.5) +\n  tm_shape(b1_filtered_sig_lm) +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-159-1.png){width=672}\n:::\n:::\n\n\n#### Foreign Tourists monthly\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist_numbers_froeign_monthly2019_st2 <- tourist_numbers_froeign_monthly2019_st %>%\n  activate(\"geometry\")\n\ntourist_numbers_froeign_monthly_st_nb <- tourist_numbers_froeign_monthly2019_st2 %>%\n  mutate(\n    centroid = st_centroid(geometry),\n    nb = include_self(st_contiguity(geometry)), \n    wt = st_inverse_distance(nb, centroid, scale = 1, alpha = 1),  \n    .before = 1\n  ) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars_tourist_numbers_froeign_monthly <- tourist_numbers_froeign_monthly_st_nb %>% \n  group_by(month) %>% \n  mutate(\n    gi_star = local_gstar_perm(total_value,nb,wt)\n  ) %>% \n  tidyr::unnest(gi_star)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbkgm <- gi_stars_tourist_numbers_froeign_monthly %>% \n  ungroup() %>% \n  filter(ADM1_EN == \"Bangkok\") %>% \n  select(ADM1_EN, month, gi_star)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = bkgm, \n       aes(x = month, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-163-1.png){width=672}\n:::\n:::\n\n\nPrinting Mann-Kendall test report\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbkgm %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n     tau     sl     S     D  varS\n   <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 -0.576 0.0112   -38  66.0  213.\n```\n\n\n:::\n:::\n\n\nFrom the above result, sl is the p-value \\< 0.05. With reference to the results, we will reject the hypothesis null and tau \\< 0 infer that a downward trend.\n\nMann-Kendall test data.frame We can replicate this for each location by using group_by() of dplyr package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_tourist_numbers_foreign_month <- gi_stars_tourist_numbers_froeign_monthly %>%\n  group_by(ADM1_EN) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\nhead(ehsa_tourist_numbers_foreign_month)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  ADM1_EN           tau     sl     S     D  varS\n  <chr>           <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 Ang Thong      0.212  0.373     14  66.0  213.\n2 Bangkok       -0.576  0.0112   -38  66.0  213.\n3 Kanchanaburi   0.0606 0.837      4  66.0  213.\n4 Nakhon Pathom  0.0909 0.732      6  66.0  213.\n5 Nonthaburi     0.0606 0.837      4  66.0  213.\n6 Pathum Thani   0.182  0.451     12  66.0  213.\n```\n\n\n:::\n:::\n\n\nWe can also sort to show significant emerging hot/cold spots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemerging <- ehsa_tourist_numbers_foreign_month %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:10)\nhead(emerging)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  ADM1_EN                     tau      sl     S     D  varS\n  <chr>                     <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 Saraburi                  0.636 0.00493    42  66.0  213.\n2 Bangkok                  -0.576 0.0112    -38  66.0  213.\n3 Samut Prakan             -0.455 0.0467    -30  66.0  213.\n4 Ang Thong                 0.212 0.373      14  66.0  213.\n5 Pathum Thani              0.182 0.451      12  66.0  213.\n6 Phra Nakhon Si Ayutthaya  0.152 0.537      10  66.0  213.\n```\n\n\n:::\n:::\n\n\nPerforming Emerging Hotspot Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_tourist_numbers_foreign_month <- emerging_hotspot_analysis(\n  x = tourist_numbers_froeign_monthly_st_nb, \n  .var = \"total_value\", \n  k = 1, \n  nsim = 99,\n  nb_col = \"nb\",  \n  wt_col = \"wt\"        \n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa_tourist_numbers_foreign_month,\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-168-1.png){width=672}\n:::\n:::\n\n\nNo pattern detected: This is the largest category, with more than 10 areas with no significant pattern detected.\n\nSporadic coldspot: This type of area ranks second, with about 3 areas classified as sporadic coldspots, indicating that there are significantly lower values than the surrounding areas during certain periods.\n\nSporadic hotspot: About 2 areas are classified as sporadic hotspots, indicating that these areas have significantly higher values than the surrounding areas during certain periods.\n\nPersistent hotspot: Almost few areas in this figure are detected as persistent hotspots, indicating that there are very few areas in this category.\n\nVisualising EHSA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb1_filtered_ehsa_fm <- b1_filtered %>%\n  left_join(ehsa_tourist_numbers_foreign_month,\n            by = join_by(ADM1_EN == location))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nb1_filtered_sig_fm <- b1_filtered_ehsa_fm %>%\n  filter(p_value < 0.5)  \n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(b1_filtered_ehsa_fm) +\n  tm_polygons(\"classification\") + \n  tm_borders(alpha = 0.5) +\n  tm_shape(b1_filtered_sig_fm) +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-170-1.png){width=672}\n:::\n:::\n\n\n#### Tourists stay ratio\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratio_tourist_stay_yearly_st2 <- ratio_tourist_stay_yearly_st %>%\n  activate(\"geometry\")\n\nratio_tourist_stay_yearly_st_nb <- ratio_tourist_stay_yearly_st2 %>%\n  mutate(\n    centroid = st_centroid(geometry),\n    nb = include_self(st_contiguity(geometry)), \n    wt = st_inverse_distance(nb, centroid, scale = 1, alpha = 1),  \n    .before = 1\n  ) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars_ratio_tourist_stay_yearly <- ratio_tourist_stay_yearly_st_nb %>% \n  group_by(year) %>% \n  mutate(\n    gi_star = local_gstar_perm(average_ratio,nb,wt)\n  ) %>% \n  tidyr::unnest(gi_star)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbkgry <- gi_stars_ratio_tourist_stay_yearly %>% \n  ungroup() %>% \n  select(ADM1_EN, year, gi_star)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = bkgry, \n       aes(x = year, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-174-1.png){width=672}\n:::\n:::\n\n\nPrinting Mann-Kendall test report\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbkgry %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n      tau    sl     S     D   varS\n    <dbl> <dbl> <dbl> <dbl>  <dbl>\n1 -0.0576 0.452  -182 3160. 57933.\n```\n\n\n:::\n:::\n\n\nn the above result, sl is the p-value \\> 0.05. With reference to the results, we will reject the hypothesis null and infer that a downward trend.\n\nMann-Kendall test data.frame We can replicate this for each location by using group_by() of dplyr package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_ratio_tourist_stay_yearly <- gi_stars_ratio_tourist_stay_yearly %>%\n  group_by(ADM1_EN) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\nhead(ehsa_ratio_tourist_stay_yearly)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  ADM1_EN          tau     sl     S     D  varS\n  <chr>          <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 Ang Thong     -0.800 0.0864    -8    10  16.7\n2 Bangkok        0     1          0    10  16.7\n3 Kanchanaburi  -0.400 0.462     -4    10  16.7\n4 Nakhon Pathom -0.800 0.0864    -8    10  16.7\n5 Nonthaburi     0     1          0    10  16.7\n6 Pathum Thani   0.400 0.462      4    10  16.7\n```\n\n\n:::\n:::\n\n\nWe can also sort to show significant emerging hot/cold spots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemerging <- ehsa_ratio_tourist_stay_yearly %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:10)\nhead(emerging)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  ADM1_EN                     tau     sl     S     D  varS\n  <chr>                     <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 Prachuap Khiri Khan       1     0.0275    10    10  16.7\n2 Suphan Buri              -1     0.0275   -10    10  16.7\n3 Ang Thong                -0.800 0.0864    -8    10  16.7\n4 Nakhon Pathom            -0.800 0.0864    -8    10  16.7\n5 Sing Buri                -0.800 0.0864    -8    10  16.7\n6 Phra Nakhon Si Ayutthaya -0.600 0.221     -6    10  16.7\n```\n\n\n:::\n:::\n\n\nPerforming Emerging Hotspot Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_ratio_tourist_stay_yearly <- emerging_hotspot_analysis(\n  x = ratio_tourist_stay_yearly_st_nb, \n  .var = \"average_ratio\", \n  k = 1, \n  nsim = 99,\n  nb_col = \"nb\",  \n  wt_col = \"wt\"        \n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa_ratio_tourist_stay_yearly,\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-179-1.png){width=672}\n:::\n:::\n\n\nNo pattern detected means these areas do not have significant clustering (hotspot) or sparse (coldspot) phenomena, and the stay rate may be affected by other external factors rather than spatial factors.\n\nAreas with occasional hotspots indicate that the stay rate of tourists in these areas is high and significantly different from the stay rate in surrounding areas. This phenomenon may be related to specific tourist attractions, infrastructure or seasonal activities\n\nVisualising EHSA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb1_filtered_ehsa_sy <- b1_filtered %>%\n  left_join(ehsa_ratio_tourist_stay_yearly,\n            by = join_by(ADM1_EN == location))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nb1_filtered_sig_sy <- b1_filtered_ehsa_sy %>%\n  filter(p_value > 0.5)  \n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(b1_filtered_ehsa_sy) +\n  tm_polygons(\"classification\") + \n  tm_borders(alpha = 0.5) +\n  tm_shape(b1_filtered_sig_sy) +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex02_files/figure-html/unnamed-chunk-181-1.png){width=672}\n:::\n:::\n\n:::\n\n## Summary\n\nThrough EHSA analysis, some regions show different types of hotspots and coldspots. Among them, several regions are shown as \"sporadic hotspots\", that is, the stay ratio in these regions has intermittent high hotspots in the time period. Some areas in the north are shown as cold spots, which means that the tourist stay ratio is low and shows a regular decline. Monthly analysis of foreign tourists:\n\nFrom the EHSA analysis, it is known that the number of foreign tourists fluctuates between months, and some regions show hotspots, especially in areas with developed tourism. Sporadic hotspots indicate that these areas will attract a large number of foreign tourists in certain months. Monthly analysis of local tourists:\n\nCompared with foreign tourists, the hotspot areas of local tourists are more concentrated. In particular, some core tourist cities have relatively stable monthly tourist volume and form hotspots, while the cold spots in the periphery may indicate that these places are not common destinations for local tourists. Annual tourist data:\n\nAnalyzed by year, different types of patterns are shown across the country. Popular tourist areas such as the southern coastal areas have long remained hot spots, while some areas have shown cold spots or no obvious patterns. The emergence of these patterns may be related to changes in the economy, transportation or infrastructure.\n\n## References\n\n1.Tin Seong Kam.Spatail weight and applications 8.9.10\n\n2.Tin Seong Kam.In-class Exercise 4.5.6\n\n3.[Spacetime and spacetime cubes](https://sfdep.josiahparry.com/articles/spacetime-s3.html)\n\n4.Kim, M.; Lee, S. (2023). Identification of Emerging Roadkill Hotspots on Korean Expressways Using Space–Time Cubes. *International Journal of Environmental Research and Public Health*, 20, 4896. <https://doi.org/10.3390/ijerph20064896>.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}